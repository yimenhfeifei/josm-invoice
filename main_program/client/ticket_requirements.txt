Search records by various fields.
Amend erroneous records.
Add records.
Delete records.

Ticket ID entry and form submissions automatically set paid to True.
Unsatisfied fileds will be red, satisfied fields green.

Failure case 1:
	Client cannot connect to server.
	
	Response:
		Clients retry and timeout, then fall back on local database. Periodic retries.

Failure case 2:
	Customer tries to get paid more than once for the same ticket, by returing at a later date.

	Response:
		Paid boolean keeps track of paid tickets.

Failure case 3:
	Customer tries to forge a ticket using a random ticket number.

	Response:
		Ticket number isn't in database, so ticket is fraudulent, or ticket code is in database but belongs to a ticket that has been paid.

Failure case 4:
	Customer tries to forge a ticket with a valid ticket number obtained from a valid ticket which has not yet been paid. The ticket number will be present in the system, but will not have been paid. The operator must check the ticket details to ensure that they match the database entry.

Faliure case 5:
	A valid ticket is searched for but not found in the database, due to network failure.

	Response:
		The GUI will indicate that a client is unable to communicate, allowing the operator to know the reason for failure. The operator will assume the ticket to be valid.

Header layout: (Automatically generated)
	Company name
	Address
	Telephone number
	Fax number
	VAT number

Ticket layout: (Automatically generated)
	Date
	Time
	Ticket number

Customer layout: (Editable)
	Name
	House number
	Street
	Town
	Postcode
	Vehicle Registration

Payload layout:
	Gross weight	(Editable)
	After weight	(Editable if gross weight used)
	Net weight	(Editable if gross weight unused)
	material 	(Selectable)
	value	  	(Not editable unless overridden)
	total value	(Not editable)
	

	Car details: (Editable)
		Make
		Model
		Colour
		Reg.
		VIN
		Catalytic converter	(Boolean, editable if set)
